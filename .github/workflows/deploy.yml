name: Deploy API Server

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'bun.lockb'
      - 'tsconfig.json'
      - 'Dockerfile'
      - 'prisma/**'
      - 'src/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create .env file
        run: |
          cat <<- EOF > .env
          TZ=${{ secrets.TZ }}
          PORT=${{ secrets.PORT }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          EOF

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest

      - name: Deploy Docker to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
            sudo docker stop ${{ secrets.DOCKER_IMAGE }} || true
            sudo docker rm ${{ secrets.DOCKER_IMAGE }} || true
            sudo docker run -d --name ${{ secrets.DOCKER_IMAGE }} \
              -p ${{ secrets.PORT }}:${{ secrets.PORT }} --restart always \
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest
